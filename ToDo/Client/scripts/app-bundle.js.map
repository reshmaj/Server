{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/resources/index.js","src/modules/home.js","src/modules/list.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","globalResources","Home","users","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","console","log","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","List","todos","parse","getItem","priorities","showList","showCompleted","activate","getUserTodos","_id","createTodo","todoObj","description","dateDue","Date","userId","priority","saveTodo","alert","todoId","filesToUpload","length","uploadFile","editTodo","todo","deleteTodo","completeTodo","completed","toggleShowCompleted","changeFiles","Array","push","files","removeFile","index","splice","back","logout","removeItem","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","ToDos","TODO_SERVICE","todosArray","id","i","formData","FormData","forEach","item","append","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n   route: ['', 'home'],\n   moduleId: './modules/home',\n   name: 'Home' \n      },\n      {\n   route: 'list',\n   moduleId: './modules/list',\n   name: 'List', \n   auth: true \n     }\n    ]);\n  }\n}\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport config from './auth-config';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import {inject} from 'aurelia-framework'; \r\nimport {Router} from 'aurelia-router';\r\nimport { Users } from '../resources/data/users';   \r\nimport {AuthService} from 'aurelia-auth';  \r\n\r\n@inject(Router, Users, AuthService)\r\nexport class Home {\r\n\r\n  constructor(router, users, auth) {\r\n    this.router = router;\r\n    this.auth = auth;\r\n    this.loginError = '';     \r\n    this.users = users;\r\n    this.message = 'Home';\r\n    this.showLogin = true;\r\n  }\r\n\r\n  showRegister(){\r\n    this.user = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n      }\r\n      this.registerError = \"\";\r\n      \r\n    this.showLogin = false;\r\n  }\r\n   async save() {\r\n   console.log (this.user);\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n    }\r\n        \r\n\r\n  login(){\r\n    return this.auth.login(this.email, this.password)\r\n    .then(response => {\r\n      sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n      this.loginError = \"\";  \r\n      this.router.navigate('list');\r\n    })\r\n   .catch(error => {\r\n    console.log(error);\r\n    this.loginError = \"Invalid credentials.\";\r\n  });\r\n};\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {ToDos} from '../resources/data/todos';    \r\nimport {Router} from 'aurelia-router';\r\nimport { AuthService } from 'aurelia-auth';    \r\n\r\n@inject(Router, AuthService, ToDos)\r\nexport class List {\r\n  constructor(router, auth, todos) {\r\n    this.router = router;\r\n    this.todos = todos;\r\n    this.auth = auth;\r\n    this.user = JSON.parse(sessionStorage.getItem('user'));\r\n    this.priorities = ['Low', 'Medium', 'High', 'Critical'];\r\n    this.showList = true;\r\n    this.showCompleted = false;\r\n }\r\n\r\n  async activate(){\r\n    await this.todos.getUserTodos(this.user._id);\r\n}\r\n\r\n    createTodo(){   \r\n        this.todoObj = {\r\n            todos: \"\",\r\n            description: \"\",\r\n            dateDue: new Date(),\r\n            userId: this.user._id,\r\n            priority: this.priorities[0]\r\n        }\r\n        this.showList = false;      \r\n    }\r\n\r\n    \r\n    async saveTodo(){\r\n        if(this.todoObj){       \r\n            let response = await this.todos.save(this.todoObj);\r\n            if(response.error){\r\n                alert(\"There was an error creating the ToDo\");\r\n            } else {\r\n                 var todoId = response._id;\r\n                                if(this.filesToUpload && this.filesToUpload.length){\r\n                                    await this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\r\n                                    this.filesToUpload = [];\r\n                                }\r\n          \r\n            }\r\n            this.showList = true;\r\n        }\r\n    }\r\n\r\n    editTodo(todo){\r\n        this.todoObj = todo;\r\n        this.showList = false;\r\n         }\r\n     \r\n    deleteTodo(todo){\r\n       this.todos.deleteTodo(todo._id);\r\n      }\r\n         \r\n    completeTodo(todo){\r\n            todo.completed = !todo.completed;\r\n            this.todoObj = todo;\r\n            this.saveTodo();\r\n        }\r\n        \r\n        toggleShowCompleted(){\r\n                this.showCompleted = !this.showCompleted;\r\n            }\r\n      \r\n        changeFiles(){\r\n        this.filesToUpload = new Array(); \r\n        this.filesToUpload.push(this.files[0]);\r\n            }\r\n        removeFile(index){\r\n        this.filesToUpload.splice(index,1);\r\n            }\r\n                        \r\n    back(){\r\n        this.showList=true;\r\n    }\r\n\r\n  logout(){\r\n     sessionStorage.removeItem('user');\r\n     this.auth.logout();\r\n\r\n  }\r\n}\r\n\r\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n    constructor(http) {\r\n        this.httpClient = http;\r\n\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'Fetch'\r\n                }\r\n                })\r\n                .withInterceptor({\r\n                request(request) {\r\n                    console.log(`Requesting ${request.method} ${request.url}`);\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    console.log(`Received ${response.status} ${response.url}`);\r\n                    return response;\r\n                }\r\n                });\r\n            });\r\n\r\n            \r\n    }\r\n\r\n    get(url) {\r\n        return this.httpClient.fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    post(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    put(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'put',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    delete(url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'delete'\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error ;\r\n            });\r\n    }\r\n    uploadFiles(files, url){\r\n            return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: files\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n        }\r\n        \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class ToDos {\r\n    constructor(data) {\r\n                this.data = data;\r\n                this.TODO_SERVICE = 'todos';\r\n                this.todosArray= new Array ();\r\n         }\r\n\r\nasync getUserTodos(id){\r\n    let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\r\n    if(!response.error && !response.message){\r\n        this.todosArray = response;\r\n    }\r\n} \r\n\r\nasync save(todo){\r\n    if(todo){\r\n    if(!todo._id){\r\n            \r\n    let serverResponse = await this.data.post(todo, this.TODO_SERVICE);\r\n    if(!serverResponse.error){\r\n        this.todosArray.push(serverResponse);\r\n    }\r\n    return serverResponse;\r\n    }\r\n    else {\r\n                    let serverResponse = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id);\r\n                    if(!serverResponse.error){\r\n                        // this.updateArray(response);\r\n                    }\r\n                    return serverResponse;\r\n                }\r\n           }\r\n        }\r\n    \r\n        async deleteTodo(id){\r\n            let serverResponse = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\r\n            if(!serverResponse.error){\r\n                for(let i = 0; i < this.todosArray.length; i++){\r\n                    if(this.todosArray[i]._id === id){\r\n                        this.todosArray.splice(i,1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        async uploadFile(files, userId, todoId){\r\n                    let formData = new FormData();\r\n                   files.forEach((item, index) => {\r\n                formData.append(\"file\" + index, item);\r\n                    });\r\n                \r\n                let serverResponse = await this.data.uploadFiles(formData, this.TODO_SERVICE + \"/upload/\" + userId + \"/\" + todoId);\r\n                return serverResponse;\r\n            }\r\n            \r\n    }\r\n\r\n  \r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n    \r\nconstructor(data) {\r\n        this.data = data;\r\n\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\nasync save(user){\r\n    if(user){\r\n        let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n         return serverResponse;\r\n }\r\n}\r\n\r\n}\r\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\nconstructor(element) {\r\n  this.element = element;\r\n}\r\nbind() {\r\n            const defaultConfig = {\r\n                \taltInput: true,\r\n                \taltFormat: \"F j, Y\",\r\n        wrap: true\r\n            };\r\n            this._config = Object.assign({}, defaultConfig);\r\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n        }\r\n    attached() {\r\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n         }\r\n        onChange(selectedDates, dateStr, instance) {\r\n                this.value = selectedDates[0] \r\n        }\r\n        \r\n        valueChanged() {\r\n                if (!this.flatpickr) {\r\n                    return;\r\n                }\r\n                if (this.value === this.flatpickr.selectedDates[0]){\r\n                    return;\r\n                }\r\n               let newDate = this.value ? this.value : undefined;      \r\n               this.flatpickr.setDate(newDate);\r\n            }\r\n            } \r\n","export class CompletedValueConverter {\r\n      \r\n       toView(array, value) {\r\n         if(!value){\r\n          return array.filter(item => {\r\n            return !item.completed;\r\n          })\r\n         } else {\r\n           return array;\r\n         }\r\n       }\r\n      }\r\n    ","import moment from 'moment';\r\nexport class DateFormatValueConverter {\r\ntoView(value, format = 'MM-DD-YYYY') {\r\nif(value === undefined || value === null){\r\n\treturn;\r\n    \t\t}\r\n    \r\n    \t\treturn moment(value).format(format);\r\n\t}\r\n}\r\n\r\n\r\n"],"sourceRoot":".."}