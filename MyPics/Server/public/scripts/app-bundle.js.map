{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/gallery.js","src/resources/data/mypics.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","console","log","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","List","mypics","mygalleries","parse","getItem","showing","activate","getUserMypics","_id","createMypic","mypicObj","mypic","dateCreated","Date","description","userId","createPhotos","Id","selectedgallery","editMypic","editPhotos","deleteMypic","deletePhotos","back","backPhotos","saveMypic","alert","mypicId","filesToUpload","length","uploadFile","savePhotos","showPhotos","getPhotos","changeFiles","Array","push","files","removeFile","index","splice","logout","removeItem","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Mygallery","MYGALLERY_SERVICE","mygalleryArray","id","getUserMygallery","mygallery","i","mygalleryId","formData","FormData","forEach","item","append","MyPics","MYPIC_SERVICE","mypicsArray","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","DateFormatValueConverter","toView","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      { \n\troute: ['', 'home'],\n\t moduleId: './modules/home',\n\t name: 'Home' \n      },\n      {\n\t route: 'list',\n\t moduleId: './modules/list',\n   name: 'List', \n   auth: true \n     }\n    ]);\n  }\n}\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework'; \r\nimport {Router} from 'aurelia-router';\r\nimport { Users } from '../resources/data/users';   \r\nimport {AuthService} from 'aurelia-auth';  \r\n\r\n@inject(Router, Users, AuthService)\r\nexport class Home {\r\n\r\n  constructor(router, users, auth) {\r\n    this.router = router;\r\n    this.auth = auth;\r\n    this.loginError = '';     \r\n    this.users = users;\r\n    this.message = 'Home';\r\n    this.showLogin = true;\r\n  }\r\n\r\n  showRegister(){\r\n    this.user = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n      }\r\n      this.registerError = \"\";\r\n      \r\n    this.showLogin = false;\r\n  }\r\n   async save() {\r\n   console.log (this.user);\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n    }\r\n        \r\n\r\n  login(){\r\n    return this.auth.login(this.email, this.password)\r\n    .then(response => {\r\n      sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n      this.loginError = \"\";  \r\n      this.router.navigate('list');\r\n    })\r\n   .catch(error => {\r\n    console.log(error);\r\n    this.loginError = \"Invalid credentials.\";\r\n  });\r\n};\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {MyPics} from '../resources/data/mypics';\r\nimport {Mygallery} from '../resources/data/gallery';\r\nimport {AuthService} from 'aurelia-auth'; \r\n\r\n@inject(Router, MyPics, AuthService, Mygallery)\r\nexport class List {\r\n  constructor(router, mypics, auth, mygalleries) {\r\n  this.mypics = mypics;\r\n  this.router = router;\r\n  this.mygalleries = mygalleries;\r\n  this.message = 'List';\r\n  this.auth = auth;\r\n  this.user = JSON.parse(sessionStorage.getItem('user'));\r\n  this.showing = \"mypicList\";\r\n  \r\n  }\r\n  async activate(){\r\n\t\tawait this.mypics.getUserMypics(this.user._id);\r\n\t}\r\n\r\n  createMypic(){\t\r\n\t\tthis.mypicObj = {\r\n\t\t\tmypic: \"\",\r\n      dateCreated: new Date(),\r\n      description: \"\",\r\n\t\t\tuserId: this.user._id,\r\n\t\t\r\n\t\t}\r\n\t\tthis.showing = 'mypicForm';\t\t\r\n  }\r\n\r\n  createPhotos(){\t\r\n\t\tthis.mypicObj = {\r\n\t// \t\tmypic: \"\",\r\n  //     dateCreated: new Date(),\r\n  //     description: \"\",\r\n      userId: this.user._id,\r\n      Id: this.selectedgallery\r\n\t\t\r\n\t\t}\r\n\t\tthis.showing = 'photoForm';\t\t\r\n  }\r\n  \r\n     editMypic(mypic){\r\n            this.mypicObj = mypic;\r\n            this.showing = 'mypicForm';\t\r\n        } \r\n\r\n    editPhotos(mypic){\r\n             this.mypicObj = mypic;\r\n              this.showing = 'photoForm';\t\r\n    }\r\n\r\n       deleteMypic(mypic){\r\n              this.mypics.deleteMypic(mypic._id);\r\n          }\r\n\r\n      deletePhotos(mypic){\r\n                this.mygalleries.deleteMypic(mypic._id);\r\n            }\r\n      \r\n      back(){\r\n        this.showing = \"mypicList\";\r\n    }\r\n\r\n    backPhotos(){\r\n      this.showing = \"photoList\";\r\n  }\r\n\tasync saveMypic(){\r\n\t\tif(this.mypicObj){\t\t\r\n\t\t\tlet response = await this.mypics.save(this.mypicObj);\r\n\t\t\tif(response.error){\r\n\t\t\t\talert(\"There was an error creating the Mypic\");\r\n\t\t\t} else {\r\n\t\t\t\t    var mypicId = response._id;\r\n                        if(this.filesToUpload && this.filesToUpload.length){\r\n                            await this.mypics.uploadFile(this.filesToUpload, this.user._id, mypicId);\r\n                            this.filesToUpload = [];\r\n                        }\r\n          \r\n\t\t\t}\r\n\t\t\tthis.showing = \"mypicList\";\r\n\t\t}\r\n  }\r\n\r\n  async savePhotos(){\r\n\t\tif(this.mypicObj){\t\t\r\n\t\t\tlet response = await this.mygalleries.save(this.mypicObj);\r\n\t\t\tif(response.error){\r\n\t\t\t\talert(\"There was an error creating the Mypic\");\r\n\t\t\t} else {\r\n\t\t\t\t    var mypicId = response._id;\r\n                        if(this.filesToUpload && this.filesToUpload.length){\r\n                            await this.mygalleries.uploadFile(this.filesToUpload, this.user._id, mypicId);\r\n                            this.filesToUpload = [];\r\n                        }\r\n          \r\n\t\t\t}\r\n\t\t\tthis.showing = \"photoList\";\r\n\t\t}\r\n  }\r\n  \r\nasync showPhotos(mypic){\r\n  this.selectedgallery =  mypic._id;\r\n await this.mygalleries.getPhotos(mypic._id)\r\nthis.showing = \"photoList\";\r\n  }\r\n\r\n  changeFiles(){\r\n        this.filesToUpload = new Array(); \r\n        this.filesToUpload.push(this.files[0]);\r\n    }\r\n    \r\n    removeFile(index){\r\n        this.filesToUpload.splice(index,1);\r\n    }\r\n    \r\n  logout(){\r\n    sessionStorage.removeItem('user');\r\n    this.auth.logout();\r\n}\r\n\r\n}\r\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './elements/flatpickr'\n  ]);\n  \n}\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n    constructor(http) {\r\n\t\tthis.httpClient = http;\r\n\t\tthis.BASE_URL = \"http://localhost:5000/api/\";\r\n\r\n\t\tthis.httpClient.configure(config => {\r\n\t\tconfig\r\n\t\t\t.withBaseUrl(this.BASE_URL)\r\n\t\t\t.withDefaults({\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'X-Requested-With': 'Fetch'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t\t.withInterceptor({\r\n\t\t\trequest(request) {\r\n\t\t\t\tconsole.log(`Requesting ${request.method} ${request.url}`);\r\n\t\t\t\treturn request;\r\n\t\t\t},\r\n\t\t\tresponse(response) {\r\n\t\t\t\tconsole.log(`Received ${response.status} ${response.url}`);\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n    get(url) {\r\n\t\treturn this.httpClient.fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n    post(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n    put(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'put',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n    delete(url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'delete'\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error ;\r\n\t\t\t});\r\n\t}\r\n\tuploadFiles(files, url){\r\n\t\t    return this.httpClient\r\n\t\t    .fetch(url, {\r\n\t\t        method: 'post',\r\n\t\t        body: files\r\n\t\t    })\r\n\t\t    .then(response => response.json())\r\n\t\t    .then(object => {\r\n\t\t        return object;\r\n\t\t    })\r\n\t\t    .catch(error => {\r\n\t\t        return error;\r\n\t\t    });\r\n\t\t}\r\n\t\t\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Mygallery {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.MYGALLERY_SERVICE = 'Galleries';\r\n        this.mygalleryArray = [];\r\n\r\n    }\r\n\r\n    async getPhotos(id){\r\n        let response = await this.data.get(this.MYGALLERY_SERVICE + \"/\" + id);\r\n        if (!response.error && !response.message) {\r\n            this.mygalleryArray = response;\r\n        }\r\n            }\r\n            \r\n    async getUserMygallery(id) {\r\n        let response = await this.data.get(this.MYGALLERY_SERVICE + \"/user/\" + id);\r\n        if (!response.error && !response.message) {\r\n            this.mygalleryArray = response;\r\n        }\r\n    }\r\n\r\n    async save(mygallery) {\r\n            if (mygallery) {\r\n            if (!mygallery._id) {\r\n                let serverResponse = await this.data.post(mygallery, this.MYGALLERY_SERVICE);\r\n                if (!serverResponse.error) {\r\n                    this.mygalleryArray.push(serverResponse);\r\n                }\r\n                return serverResponse;\r\n             } else {\r\n                let serverResponse = await this.data.put(mygallery, this.MYGALLERY_SERVICE + \"/\" + mygallery._id);\r\n                if (!serverResponse.error) {\r\n                    // this.updateArray(response);\r\n                }\r\n                return serverResponse;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async deleteMypic(id) {\r\n        let serverResponse = await this.data.delete(this.MYGALLERY_SERVICE + \"/\" + id);\r\n        if (!serverResponse.error) {\r\n            for (let i = 0; i < this.mygalleryArray.length; i++) {\r\n                if (this.mygalleryArray[i]._id === id) {\r\n                    this.mygalleryArray.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async uploadFile(files, userId, mygalleryId){\r\n                let formData = new FormData();\r\n                files.forEach((item, index) => {\r\n                formData.append(\"file\" + index, item);\r\n                });\r\n            \r\n            let serverResponse = await this.data.uploadFiles(formData, this.MYGALLERY_SERVICE +\t\t\"/upload/\" + userId + \"/\" + mygalleryId);\r\n            return serverResponse;\r\n        }\r\n        \r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class MyPics {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.MYPIC_SERVICE = 'mypics';\r\n        this.mypicsArray = [];\r\n\r\n    }\r\n  \r\n\r\n    async getUserMypics(id) {\r\n        let response = await this.data.get(this.MYPIC_SERVICE + \"/user/\" + id);\r\n        if (!response.error && !response.message) {\r\n            this.mypicsArray = response;\r\n        }\r\n    }\r\n\r\n    async save(mypic) {\r\n        console.log(mypic)\r\n        if (mypic) {\r\n            if (!mypic._id) {\r\n                let serverResponse = await this.data.post(mypic, this.MYPIC_SERVICE);\r\n                if (!serverResponse.error) {\r\n                    this.mypicsArray.push(serverResponse);\r\n                }\r\n                return serverResponse;\r\n             } else {\r\n                let serverResponse = await this.data.put(mypic, this.MYPIC_SERVICE + \"/\" + mypic._id);\r\n                if (!serverResponse.error) {\r\n                    // this.updateArray(response);\r\n                }\r\n                return serverResponse;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async deleteMypic(id) {\r\n        let serverResponse = await this.data.delete(this.MYPIC_SERVICE + \"/\" + id);\r\n        if (!serverResponse.error) {\r\n            for (let i = 0; i < this.mypicsArray.length; i++) {\r\n                if (this.mypicsArray[i]._id === id) {\r\n                    this.mypicsArray.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async uploadFile(files, userId, mypicId){\r\n                let formData = new FormData();\r\n                files.forEach((item, index) => {\r\n            formData.append(\"file\" + index, item);\r\n                });\r\n            \r\n            let serverResponse = await this.data.uploadFiles(formData, this.MYPIC_SERVICE +\t\t\"/upload/\" + userId + \"/\" + mypicId);\r\n            return serverResponse;\r\n        }\r\n        \r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\nasync save(user){\r\n    if(user){\r\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n         return serverResponse;\r\n }\r\n}\r\n}\r\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\nconstructor(element) {\r\n  this.element = element;\r\n}\r\nbind() {\r\n            const defaultConfig = {\r\n                \taltInput: true,\r\n                \taltFormat: \"F j, Y\",\r\n        wrap: true\r\n            };\r\n            this._config = Object.assign({}, defaultConfig);\r\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n        }\r\n    attached() {\r\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n         }\r\n        onChange(selectedDates, dateStr, instance) {\r\n                this.value = selectedDates[0] \r\n        }\r\n    \r\n    valueChanged() {\r\n                if (!this.flatpickr) {\r\n                    return;\r\n                }\r\n                if (this.value === this.flatpickr.selectedDates[0]){\r\n                    return;\r\n                }\r\n                let newDate = this.value ? this.value : undefined;      \r\n                this.flatpickr.setDate(newDate);\r\n            }\r\n            }\r\n\r\n            ","import moment from 'moment';\r\n\r\nexport class DateFormatValueConverter {\r\ntoView(value, format='MM-DD-YYYY') {\r\nif(value === undefined || value === null){\r\n\treturn;\r\n    \t\t}\r\n    \r\n    \t\treturn moment(value).format(format);\r\n\t}\r\n}\r\n"],"sourceRoot":".."}