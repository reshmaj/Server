{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","loginError","message","showLogin","showRegister","user","firstName","lastName","email","password","registerError","save","console","log","serverResponse","error","login","sessionStorage","setItem","JSON","stringify","response","navigate","catch","List","todos","parse","getItem","title","editTodoForm","showCompleted","showList","priorities","activate","getUserTodos","_id","createTodo","todoObj","todo","description","dateDue","Date","userId","priority","saveTodo","alert","back","showlist","logout","removeItem","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","delete","ToDos","TODO_SERVICE","todosArray","id","push","Users","USER_SERVICE"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {FetchConfig} from 'aurelia-auth';\nimport {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      { \n\troute: ['', 'home'],\n\t moduleId: './modules/home',\n\t name: 'Home' \n      },\n      {\n\t route: 'list',\n\t moduleId: './modules/list',\n   name: 'List',\n   auth: true \n   }\n    ]);\n  }\n}\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport config from './auth-config';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { Users } from '../resources/data/users';\r\nimport {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n\r\n@inject(Router, Users, AuthService)\r\nexport class Home {\r\n  constructor(router, users, auth) {\r\n    this.router = router;\r\n    this.auth = auth;\r\n    this.loginError = '';\r\n    this.users = users;\r\n    this.message = 'Home';\r\n    this.showLogin = true;\r\n          \r\n  }\r\n  showRegister(){\r\n    this.user = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n        }\r\n        this.registerError = \"\";\r\n        this.showLogin = false;\r\n}\r\n\r\n    async save() {\r\n    console.log(this.user)\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n    }\r\n    \r\n  login(){\r\n  return this.auth.login(this.email, this.password)\r\n  .then(response => {\r\n  sessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n  this.loginError = \"\";\r\n  this.router.navigate('list');\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    this.loginError = \"Invalid credentials.\";\r\n  });\r\n};\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {ToDos} from '../resources/data/todos';\r\n//import {Router} from 'aurelia-router';\r\nimport { AuthService } from 'aurelia-auth';\r\n\r\n\r\n\r\n@inject(ToDos,AuthService)\r\nexport class List {\r\n  constructor(todos, auth){\r\n\t\tthis.todos = todos;\r\n\t\tthis.auth = auth;\r\n\t\tthis.user = JSON.parse(sessionStorage.getItem('user'));\r\n\t\tthis.title = \"Reshma Has Things ToDo!\"\r\n\t\tthis.editTodoForm = false;\r\n    this.showCompleted = false;\r\n    this.showList = true;\r\n\t\tthis.priorities = ['Low', 'Medium', 'High', 'Critical'];\r\n  }\r\n  \r\n  async activate(){\r\n\t\t                await this.todos.getUserTodos(this.user._id);\r\n                \t}\r\n\r\ncreateTodo(){\t\r\n  this.todoObj = {\r\n    todo: \"\",\r\n    description: \"\",\r\n    dateDue: new Date(),\r\n     userId: this.user._id,\r\n    priority: this.priorities[0]\r\n  }\r\n  this.showList = false;\t\t\r\n}\r\n\r\nasync saveTodo(){\r\n  if(this.todoObj){\t\t\r\n    let response = await this.todos.save(this.todoObj);\r\n    if(response.error){\r\n      alert(\"There was an error creating the ToDo\");\r\n    } else {\r\n      //Could provide feeback\t\t\t\t\t\t\t\t\t\r\n    }\r\n    this.showList = true;\r\n  }\r\n}\r\n\r\nback(){\r\n  this.showlist=true;\r\n}\r\n\r\nlogout(){\r\n  // this.router.navigate('home');\r\n  sessionStorage.removeItem('user');\r\n  this.auth.logout();\r\n }\r\n}\r\n\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n\tconstructor(http) {\r\n\t\tthis.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'Fetch'\r\n                }\r\n                })\r\n                .withInterceptor({\r\n                request(request) {\r\n                    console.log(`Requesting ${request.method} ${request.url}`);\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    console.log(`Received ${response.status} ${response.url}`);\r\n                    return response;\r\n                }\r\n                });\r\n            });\r\n    \r\n    }\r\n    get(url) {\r\n\t\treturn this.httpClient.fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n\tpost(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n\t}\r\n\r\n    delete(url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'delete'\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error ;\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class ToDos {\r\n        \tconstructor(data) {\r\n        \t\tthis.data = data;\r\n        \t\tthis.TODO_SERVICE = 'todos';\r\n                this.todosArray = [];\r\n   \t\t }\r\n\r\nasync getUserTodos(id){\r\n         let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\r\n         if(!response.error && !response.message){\r\n         this.todosArray = response;\r\n                      }\r\n}\r\n\r\nasync save(todo){\r\n         if(todo){\r\n                    let serverResponse = await this.data.post(todo, this.TODO_SERVICE);\r\n                    if(!serverResponse.error){\r\n                                                 this.todosArray.push(serverResponse);\r\n                                              }\r\n                     return serverResponse;\r\n                 }\r\n                }\r\n\r\n}\r\n    ","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\ninject(DataServices)\r\nexport class Users {\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\nasync save(user){\r\n    if(user){\r\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n         return serverResponse;\r\n }\r\n}\r\n}\r\n"],"sourceRoot":".."}